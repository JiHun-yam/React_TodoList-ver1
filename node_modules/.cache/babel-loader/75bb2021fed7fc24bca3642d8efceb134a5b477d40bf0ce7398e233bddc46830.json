{"ast":null,"code":"var _jsxFileName = \"/Users/eumjihun/Desktop/\\u1112\\u1161\\u11BC\\u1112\\u1162 React \\u110B\\u1175\\u11B8\\u1106\\u116E\\u11AB/src/components/InputBox/InputBox.jsx\",\n  _s = $RefreshSig$();\nimport { React, useState } from 'react';\nimport './InputBox.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction InputBox(_ref) {\n  _s();\n  let {\n    todos,\n    setTodos\n  } = _ref;\n  const initialState = {\n    id: null,\n    title: \"\",\n    comment: \"\",\n    isDone: false\n  }; //초기값\n\n  const [inputTodo, setInputTodo] = useState(initialState);\n  const onChangeHandler = event => {\n    // value = title name = comment\n    const {\n      value,\n      name\n    } = event.target;\n    console.log(value, name);\n    //얕은복사로기존값복사하고 새로추가된 값 들 대입 \n    setInputTodo({\n      ...inputTodo,\n      [name]: value,\n      id: Math.random()\n    });\n  };\n  const onSubmitHandler = e => {\n    e.preventDefault(); // 작동 멈춰!!!!!\n    // onChangeHandler에서 setInputTodo으로 바꾼 inputTodo 으로 값넣고 재렌더링ㄴ\n    setTodos([...todos, inputTodo]);\n    // input창을 비우기\n    setInputTodo(initialState);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"HeaderInputBox\",\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: onSubmitHandler,\n      className: \"HeaderInputBoxForm\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"input-ground\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"form-label\",\n          children: \"Title\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          required: true,\n          type: \"text\",\n          name: \"title\",\n          placeholder: \"\\uC81C\\uBAA9\\uC785\\uB825\",\n          className: \"add-input input-body\",\n          onChange: onChangeHandler,\n          value: inputTodo.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"form-label\",\n          children: \"Comment\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          required: true,\n          type: \"text\",\n          name: \"comment\",\n          placeholder: \"\\uB313\\uAE00\\uC785\\uB825\",\n          className: \"add-input input-body\",\n          onChange: onChangeHandler,\n          value: inputTodo.comment\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"add-button\",\n        children: \"\\uCD94\\uAC00\\uD558\\uAE30\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 9\n  }, this);\n}\n_s(InputBox, \"pIsan1jCVFmeWwouRwmoEGNPCPg=\");\n_c = InputBox;\nexport default InputBox;\nvar _c;\n$RefreshReg$(_c, \"InputBox\");","map":{"version":3,"names":["React","useState","InputBox","todos","setTodos","initialState","id","title","comment","isDone","inputTodo","setInputTodo","onChangeHandler","event","value","name","target","console","log","Math","random","onSubmitHandler","e","preventDefault"],"sources":["/Users/eumjihun/Desktop/항해 React 입문/src/components/InputBox/InputBox.jsx"],"sourcesContent":["import { React, useState } from 'react'\nimport './InputBox.css'\n\nfunction InputBox({ todos, setTodos }) {\n\n    const initialState = { id: null, title: \"\", comment: \"\", isDone: false } //초기값\n\n\n    const [inputTodo, setInputTodo] = useState(initialState)\n\n\n\n    const onChangeHandler = (event) => {\n        // value = title name = comment\n        const { value, name } = event.target\n        console.log(value, name)\n        //얕은복사로기존값복사하고 새로추가된 값 들 대입 \n        setInputTodo({ ...inputTodo, [name]: value, id: Math.random() })\n\n    }\n\n    const onSubmitHandler = (e) => {\n        e.preventDefault() // 작동 멈춰!!!!!\n        // onChangeHandler에서 setInputTodo으로 바꾼 inputTodo 으로 값넣고 재렌더링ㄴ\n        setTodos([...todos, inputTodo])\n        // input창을 비우기\n        setInputTodo(initialState)\n\n\n    }\n\n\n\n\n    return (\n        <div className=\"HeaderInputBox\">\n\n            {/* 버튼이 눌리면 */}\n            {/* 멍청하게도 onClick 를 해버려서 form안에 태그 누를때마다 todos가 생성해버렸다 하 나는 멍청이다  */}\n            <form onSubmit={onSubmitHandler} className=\"HeaderInputBoxForm\">\n                <div className='input-ground'>\n                    <label className=\"form-label\">Title</label>\n\n                    <input\n                        required\n                        type=\"text\"\n                        name=\"title\"\n                        placeholder='제목입력'\n                        className=\"add-input input-body\"\n                        onChange={onChangeHandler}\n                        value={inputTodo.title}\n                    />\n                    <label className=\"form-label\">Comment</label>\n\n                    <input\n                        required\n                        type=\"text\"\n                        name=\"comment\"\n                        placeholder='댓글입력'\n                        className=\"add-input input-body\"\n                        onChange={onChangeHandler}\n                        value={inputTodo.comment}\n                    />\n\n                </div>\n                <button className=\"add-button\">추가하기</button>\n\n            </form>\n        </div >\n    )\n}\n\nexport default InputBox"],"mappings":";;AAAA,SAASA,KAAK,EAAEC,QAAQ,QAAQ,OAAO;AACvC,OAAO,gBAAgB;AAAA;AAEvB,SAASC,QAAQ,OAAsB;EAAA;EAAA,IAArB;IAAEC,KAAK;IAAEC;EAAS,CAAC;EAEjC,MAAMC,YAAY,GAAG;IAAEC,EAAE,EAAE,IAAI;IAAEC,KAAK,EAAE,EAAE;IAAEC,OAAO,EAAE,EAAE;IAAEC,MAAM,EAAE;EAAM,CAAC,EAAC;;EAGzE,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGV,QAAQ,CAACI,YAAY,CAAC;EAIxD,MAAMO,eAAe,GAAIC,KAAK,IAAK;IAC/B;IACA,MAAM;MAAEC,KAAK;MAAEC;IAAK,CAAC,GAAGF,KAAK,CAACG,MAAM;IACpCC,OAAO,CAACC,GAAG,CAACJ,KAAK,EAAEC,IAAI,CAAC;IACxB;IACAJ,YAAY,CAAC;MAAE,GAAGD,SAAS;MAAE,CAACK,IAAI,GAAGD,KAAK;MAAER,EAAE,EAAEa,IAAI,CAACC,MAAM;IAAG,CAAC,CAAC;EAEpE,CAAC;EAED,MAAMC,eAAe,GAAIC,CAAC,IAAK;IAC3BA,CAAC,CAACC,cAAc,EAAE,EAAC;IACnB;IACAnB,QAAQ,CAAC,CAAC,GAAGD,KAAK,EAAEO,SAAS,CAAC,CAAC;IAC/B;IACAC,YAAY,CAACN,YAAY,CAAC;EAG9B,CAAC;EAKD,oBACI;IAAK,SAAS,EAAC,gBAAgB;IAAA,uBAI3B;MAAM,QAAQ,EAAEgB,eAAgB;MAAC,SAAS,EAAC,oBAAoB;MAAA,wBAC3D;QAAK,SAAS,EAAC,cAAc;QAAA,wBACzB;UAAO,SAAS,EAAC,YAAY;UAAA,UAAC;QAAK;UAAA;UAAA;UAAA;QAAA,QAAQ,eAE3C;UACI,QAAQ;UACR,IAAI,EAAC,MAAM;UACX,IAAI,EAAC,OAAO;UACZ,WAAW,EAAC,0BAAM;UAClB,SAAS,EAAC,sBAAsB;UAChC,QAAQ,EAAET,eAAgB;UAC1B,KAAK,EAAEF,SAAS,CAACH;QAAM;UAAA;UAAA;UAAA;QAAA,QACzB,eACF;UAAO,SAAS,EAAC,YAAY;UAAA,UAAC;QAAO;UAAA;UAAA;UAAA;QAAA,QAAQ,eAE7C;UACI,QAAQ;UACR,IAAI,EAAC,MAAM;UACX,IAAI,EAAC,SAAS;UACd,WAAW,EAAC,0BAAM;UAClB,SAAS,EAAC,sBAAsB;UAChC,QAAQ,EAAEK,eAAgB;UAC1B,KAAK,EAAEF,SAAS,CAACF;QAAQ;UAAA;UAAA;UAAA;QAAA,QAC3B;MAAA;QAAA;QAAA;QAAA;MAAA,QAEA,eACN;QAAQ,SAAS,EAAC,YAAY;QAAA,UAAC;MAAI;QAAA;QAAA;QAAA;MAAA,QAAS;IAAA;MAAA;MAAA;MAAA;IAAA;EAEzC;IAAA;IAAA;IAAA;EAAA,QACJ;AAEf;AAAC,GAnEQN,QAAQ;AAAA,KAARA,QAAQ;AAqEjB,eAAeA,QAAQ;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}